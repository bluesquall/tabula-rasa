#!/usr/bin/env bash
set -e

# remote:
url="github:bluesquall/tabula-rasa/sops-nix#encom"
# local:
url=".#encom"

usage() {
  echo "please specify the drive to prepare for NixOS (e.g., /dev/nvme0n1)";
}

while [[ $# -gt 1 ]]; do
  case "$1" in
    -u | --url )
      shift
      url="$1"
      host=$(echo ${url} | cut -d "#" -f 2)
      ;;
    *)
      usage;
      exit 1;
  esac
  shift
done

if [[ $# == 1 ]]; then
  drive="$1";
else
  usage;
  exit 1;
fi

if [[ -f "/tmp/ssh_host_ed25519_key" ]]; then
  echo "sops-nix will use ed25519 host private key from /tmp"
else
  echo "please put a ed25519 host private key in /tmp"
  echo "and make sure secrets.yaml has been encoded for the"
  echo "corresponding public key"
  exit 1;
fi

read -r -p "passphrase for LUKS encryption ~> " passphrase

echo "preparing drive ${drive} for NixOS"
echo ""
echo "WARNING!"
echo "this script will overwrite everything on ${drive}"
echo "the current partition table on ${drive} is:"
sgdisk --print ${drive}
read -r -p "type ${drive} to confirm and overwrite partitions ~> " confirm
if [[ ! ${confirm} == ${drive} ]]; then exit 1; fi

sgdisk --clear ${drive}
sgdisk --new 1:4096:2048000 --typecode 1:ef00 --change-name 1:EFI ${drive}
sgdisk --new 2:2048001: --typecode 2:8309 --change-name 2:luks ${drive}
sgdisk --print ${drive}
partprobe ${drive}; sleep 2
mkfs.vfat -n EFI /dev/disk/by-partlabel/EFI
echo ${passphrase} | cryptsetup -q luksFormat /dev/disk/by-partlabel/luks
echo ${passphrase} | cryptsetup open /dev/disk/by-partlabel/luks crypt
mkfs.btrfs -f /dev/mapper/crypt
mount -t btrfs /dev/mapper/crypt /mnt
btrfs subvolume create /mnt/root
btrfs subvolume create /mnt/home
btrfs subvolume create /mnt/nix
btrfs subvolume create /mnt/persist
btrfs subvolume create /mnt/log
btrfs subvolume create /mnt/swap
btrfs subvolume snapshot -r /mnt/root /mnt/root-blank
umount /mnt
mount -o subvol=root,compress=zstd,noatime /dev/mapper/crypt /mnt
mkdir -p /mnt/boot
mount /dev/disk/by-partlabel/EFI /mnt/boot
mkdir -p /mnt/home
mkdir -p /mnt/nix
mkdir -p /mnt/persist
mkdir -p /mnt/var/log
mount -o subvol=home,compress=zstd,noatime /dev/mapper/crypt /mnt/home
mount -o subvol=nix,compress=zstd,noatime /dev/mapper/crypt /mnt/nix
mount -o subvol=persist,compress=zstd,noatime /dev/mapper/crypt /mnt/persist
mount -o subvol=log,compress=zstd,noatime /dev/mapper/crypt /mnt/var/log
mkdir -p /mnt/etc/nixos

echo "generating RSA host keys, because sops-nix hates missing them"
mkdir -p /mnt/persist/etc/ssh
ssh-keygen -q -t rsa -b 4096 -C "${hostname}" -N "" -f /mnt/persist/etc/ssh/ssh_host_rsa_key
echo "moving ed25519 host secret key from /tmp to persistent storage"
echo "  so sops-nix can find and use it"
mv /tmp/ssh_host_ed25519_key /mnt/persist/etc/ssh
ssh-keygen -yf /mnt/persist/etc/ssh/ssh_host_ed25519_key > /mnt/persist/etc/ssh/ssh_host_ed25519_key.pub

echo "running nixos-install"
time nixos-install --flake ${url} --no-root-password

umount -R /mnt
cryptsetup close crypt

echo ""
echo "IFF you did not see any errors, reboot and enjoy!"
